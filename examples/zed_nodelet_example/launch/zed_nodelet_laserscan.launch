<?xml version="1.0"?>
<!--
Copyright (c) 2018, STEREOLABS.

All rights reserved.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
    <arg name="svo_file" default=""/>

    <arg name="zed_node_name"         default="zed_node" />
    <arg name="camera_model"          default="zed" /> <!-- 0=ZED, 1=ZEDM-->
    
    <arg name="nodelet_manager_name"  default="zed_nodelet_manager" />

    <group ns="camera">
	    <!-- Nodelet Manager -->
        <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"  args="manager" output="screen" />

        <!-- ZED wrapper as nodelet -->
        <include file="$(find zed_wrapper)/launch/zed_camera_nodelet.launch">
            <arg name="svo_file"             value="$(arg svo_file)"/>
            <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)" />
            <arg name="camera_model"         value="$(arg camera_model)" />
            <arg name="node_name"            value="$(arg zed_node_name)" />
        </include>

        <!-- Virtual laser scan as nodelet -->
        <!-- "$ sudo apt install ros-kinetic-depthimage-to-laserscan" -->
        <!--
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet zed_nodelet_manager">
             <param name="scan_height" value="10"/>
             <param name="output_frame_id" value="zed_left_camera_frame"/>
             <param name="range_min" value="0.45"/>
             <remap from="image" to="$(arg zed_node_name)/depth/depth_registered"/>
        </node>
        -->


    <!-- push pointcloud_to_laserscan nodelet into sensor's nodelet manager-->
        <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet zed_nodelet_manager">
	     <remap from="cloud_in" to="$(arg zed_node_name)/point_cloud/cloud_registered"/>
             <remap from="scan" to="$(arg camera_model)/point_cloud_scan"/>

             <param name="target_frame"    	value="zed_left_camera_frame"/>
             <param name="min_height"      	value="-0.45"/>
             <param name="max_height"      	value="1.5"/>
             <param name="angle_min"       	value="-1.5708"/>  <!--   -M_PI/2 -->
             <param name="angle_max"       	value="1.5708"/>   <!--    M_PI/2 -->
             <param name="angle_increment" 	value="0.0087"/>   <!--   M_PI/360.0-->
             <param name="scan_time"       	value="0.3333"/>
             <param name="range_min"       	value="0.40"/>
             <param name="range_max"       	value="5.0"/>
             <param name="use_inf"         	value="true"/>
             <param name="inf_epsilon"     	value="1.0"/>
             <param name="concurrency_level"    value="1"/>
 
    	</node>



	<node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection zed_nodelet_manager">
	        <remap from="cloud"                     to="$(arg zed_node_name)/point_cloud/cloud_registered"/>
		<param name="frame_id"                  type="string" value="base_link"/>		
		<param name="wait_for_transform"        type="bool" value="true"/>
		<param name="Grid/MinClusterSize"       type="int" value="20"/>
		<param name="Grid/MaxObstacleHeight"    type="double" value="1.5"/>
        </node>



    </group>
</launch>
